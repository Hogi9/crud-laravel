Video 1 :
    Penjelasan sejarah dan fitur yang ada di laravel
Video 2 :
    Penjelasan mengenai instalasi composer, laravel, dan configurasi fitur valet
Video 3 :
    Penjelasan mengenai lokasi model,view,controller;
    Contoh pembuatan route di folder routes/web.php;
    Contoh pembuatan statik file (di folder public);
    Cara mengambil data dari route ke view dengan echo;


Video 4 :
    Menampilkan data menggunakan blade templating dengan cara => {{ $data }}
    @extend digunakan untuk mengambil view dari halaman lain
    @yield berada didalam @extend yang digunakan untuk mengambil @section
    @section berisi data yang berbeda beda dan ditutup dengan @endsection
    Menampilkan data dummy dari route dengan @foreach


Video 5 :
    Memindahkan data static di route ke model
        php artisan make:model nama_model
    Menggunakan fitur collection untuk mendapatkan data yang dibutuhkan di model, fungsi collection dapat dilihat di dokumentasi laravel
    * Kalau self untuk properti/variabel static, kalau static untuk fungsi/method static
        php artisan make:controller nama_controller
    Contoh Penggunaan Collection : 
        collect(array1); << deklarasi
        array1->firstWhere('id',$id) << call function
            ('id',$id) << 'id' yang dimaksud merupakan salah 1 data pada variabel array1 atau sama dengan array1['id']


ideo 6 (Database,Migration,Eloquent(ORM)) :
    Migration :
        Migration / version control database digunakan untuk membuat schema db melalui codingan
            php artisan make:migration nama_migration
            #jika sudah ada migrasinya
            php artisan migrate
        Terdapat fungsi up dan down pada file database/migrations/.
        Fungsi up digunakan untuk pembuatan schema/struktur database
        Fungsi down digunakan untuk menghapus schema dengan cara
            php artisan migrate:rollback
            php artisan migrate:fresh <<< menjalankan fungsi down kemudian up

    Eloquent (ORM) :
        Eloquent digunakan supaya tabel pada db terhubung dengan model
        Jika model berupa orm dan sudah ada file migrationnya, pada file model terdapat fungsi fillable dan hidden
        fillable digunakan supaya data dapat diisi
        hidden digunakan supaya data dapat disembunyikan

    Tinker :
        Aplikasi didalam laravel yang dapat digunakan untuk mengisi data melalui console
            php artisan tinker


Video 7 (Detail Model) :
    Lanjutan dari video 5 dan lebih detail mengenai model di laravel
        php artisan make:model -m nama_model << -m adalah migration
    data['id'] << notasi array; data->id << notasi object
    {!! data !!} << digunakan supaya print pada blade templating menampilkan html yg ada di dalam data
    $fillable penting supaya dapat melakukan input data bnyk
    $guarded kebalikan dari $fillable

    Route Model Binding < digunakan supaya tidak perlu mengambil data di route, cukup dengan memberikan parameter model pada fungsi



Video 8 (Eloquent Relationship/hubungan antar tabel):
    tabel category hasMany tabel post   (1,n)
    tabel post belongsTo tabel category (1,1)
    ^^^
    yang punya relationship adalah category
    hasOne , ofMany

    Relationship dibuat dengan cara menambahkan fungsi dengan nama tabel relasinya dengan return :
        function category()
        {
            return $this->belongsTo(Category::class);
        }
    **Catatan penting, untuk nama fungsi pada relasi perlu diperhatikan, nama fungsi
    akan digunakan ketika akan memanggil data melalui relasi


Video 9 (Seeder):
    seeding digunakan untuk memberikan perintah yang digunakan untuk mengisi data pada db saat dilakukan 
    php artisan migrate:fresh
    php artisan db:seed
    php artisan migrate:fresh --seed

Video 10 (Factory + Faker):
    factory dapat dibuat pada tiap model yang dimiliki. Factory digunakan sebagai pabrik pembuatan data dummy dengan menggunakan Faker
    faker merupakan library tersendiri untuk men-generate data dummy.
    Faker memiliki config pada tiap negara pada file config/app.php dan cari "faker"
    Dalam pembuatan model pada video 7, dapat dilakukan seperti berikut
        php artisan make:model -mfs << -m adalah migrate, f adalah factory, dan s adalah seeder

Video 11 (N+1 Problem):
    N+1 Problem merupakan masalah dimana framework laravel "memanggil database" yang memiliki relasi
    Hal tersebut terjadi karena default laravel menggunakan "Lazy Learning"
    Hal ini dapat diatasi dengan cara menambahkan fungsi 
        with(['author','category']) pada file PostController
    Hal sebaliknya juga terjadi pada tabel user/author dan category, dimana membutuhkan data lainnya.
    Hal yang dapat dilakukan yaitu menggunakan metode "Lazy Eager Loading" dengan menggunakan fungsi
        load(['']) pada file UserController dan CategoryController

Video 12:
    fungsi with pada video 11 dapat dipindah ke model dengan cara menambahkan variable protected $with
    untuk menampilkan waktu terakhir pembuatan postingan, dapat digunakan library pihak ke 3 yang telah terinstal dengan laravel
        $post->created_at->diffForHumans()
    @foreach($data->skip(1) as $d) << digunakan untuk melakukan skip 1 data
    paragraphs pada faker dapat dimodifikasi
    
Video 13:
    query scope merupakan fungsi yang digunakan supaya fungsi tersebut dapat mudah dipanggil di query.
    query scope diletakkan pada model data dengan nama fungsi scopeNama
    contoh ternary operator :
        if(isset($data['nama']) ? $data['nama']:false)
    alternatif ternary dengan php versi 7 keatas 
        if($data['nama']??false)


Fitur yang telah dipelajari :
    - valet
    - blade templating
    - collection (untuk menyimpan data array) -> video 5
    - migration (version control database) -> video 6
    - Eloquent Object Relational Mapper (ORM) (Tabel pada DB jadi object + Relasi Tabel) -> Video 6,8
    - Tinker (Mengisi Data DB melalui console) -> video 6
    - Route Model Binding -> video 7
    - Seeders -> video 9
    - Query Scope -> video 13

Catatan Sederhana :
    Tiap schema/tabel pada db dapat terhubung dengan model dan migrasi secara langsung.
    Migrasi digunakan untuk mendeklarasikan/membuat tabel pada db. Dan model mengatur relasi antar tabel.
    Factory juga dapat terhubung dengan tiap model yang ada
